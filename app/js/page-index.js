"use strict";(self.webpackChunkgulp_builder=self.webpackChunkgulp_builder||[]).push([[765],{789:(e,o,r)=>{var t=r(482),n=r(68);!function(e,o){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],l=arguments.length>3?arguments[3]:void 0;const s=document?.querySelector(e),a=s?.querySelector('input[type="tel"]');if(!s)return console.error("Нет такого селектора!"),!1;if(!o)return console.error("Вы не передали правила валидации!"),!1;if(a){new n.A("+7 (999) 999-99-99").mask(a);for(let e of o)e.tel&&e.rules.push({rule:"function",validator:function(){return 10===a.inputmask.unmaskedvalue().length},errorMessage:e.telError})}const c=new t.Ay(e,{errorLabelStyle:{color:"#bf2738"}});for(let e of o)c.addField(e.ruleSelector,e.rules);if(r.length)for(let e of r)c.addRequiredGroup(`${e.selector}`,`${e.errorMessage}`);c.onSuccess((e=>{let o=new FormData(e.target),r=new XMLHttpRequest;r.onreadystatechange=function(){4===r.readyState&&200===r.status&&(l&&l(),console.log("Отправлено"))},r.open("POST","mail.php",!0),r.send(o),e.target.reset()}))}("[data-contacts-form]",[{ruleSelector:"[data-name]",rules:[{rule:"required",value:!0,errorMessage:"Является обязательным полем"}]},{ruleSelector:"[data-tel]",tel:!0,telError:"Введите корректный телефон",rules:[{rule:"required",value:!0,errorMessage:"Является обязательным полем"}]}],[{selector:"[data-checkbox-group]",errorMessage:""}],(()=>{console.log("Произошла отправка")}));const l={center:[52.63374771515907,50.45407973046877],branches:[{lat:53.51226532980854,lon:49.42618732568197},{lat:53.07929190101195,lon:46.65281019921874},{lat:51.290066243507866,lon:51.37693129296874},{lat:55.72958952717553,lon:37.5986928024558}]};function s(){let e=new ymaps.Map("map",{center:l.center,zoom:7,controls:["routePanelControl"]});e.controls.remove("geolocationControl"),e.controls.remove("searchControl"),e.controls.remove("trafficControl"),e.controls.remove("typeSelector"),e.controls.remove("fullscreenControl"),e.controls.remove("zoomControl"),e.controls.remove("rulerControl"),e.behaviors.disable(["scrollZoom"]);const o=e.controls.get("routePanelControl");document.querySelectorAll("[data-coords]").forEach((e=>{e.addEventListener("click",(function(){const e=this.dataset.coords;var r;r={success:r=>{const t=r.coords;o.routePanel.state.set({type:"masstransit",fromEnabled:!1,from:`${t.latitude}, ${t.longitude}`,toEnabled:!0,to:e}),(e=>{if(!(e&&e instanceof HTMLElement))return void console.error("Invalid target element");const o=e.getBoundingClientRect(),r=window.scrollY||window.pageYOffset;window.innerHeight;let t;t=r+o.top,window.scrollTo({top:t,behavior:"smooth"})})(document.querySelector(".map"))},error:e=>{console.warn(`ERROR(${e.code}): ${e.message}`)}},navigator.geolocation.getCurrentPosition(r.success,r.error,{enableHighAccuracy:!0,timeout:5e3,maximumAge:0})}))})),l.branches.forEach((o=>{const r=new ymaps.Placemark([o.lat,o.lon],{},{iconLayout:"default#image",iconImageHref:"img/svg/marker.svg",iconImageSize:[36,40],iconImageOffset:[0,0]});e.geoObjects.add(r)}))}!function(e){let o=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3?arguments[3]:void 0;const t=new IntersectionObserver((n=>{n.forEach((n=>{n.isIntersecting&&(e.forEach((e=>{r()})),o&&t.unobserve(n.target))}))}),{threshold:arguments.length>1&&void 0!==arguments[1]?arguments[1]:.5});e.forEach((e=>{t.observe(e)}))}(document.querySelectorAll(".map"),.3,!0,(()=>ymaps.ready(s)))}},e=>{e.O(0,[502],(()=>e(e.s=789))),e.O()}]);